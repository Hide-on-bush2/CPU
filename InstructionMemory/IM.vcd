$date
	Thu Nov 14 12:46:44 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module IM_sim $end
$var wire 6 ! rt [5:0] $end
$var wire 6 " rs [5:0] $end
$var wire 6 # rd [5:0] $end
$var wire 6 $ op [5:0] $end
$var wire 6 % Sa [5:0] $end
$var wire 16 & Immediate [15:0] $end
$var reg 32 ' IAddr [31:0] $end
$var reg 1 ( RW $end
$scope module uut $end
$var wire 32 ) IAddr [31:0] $end
$var wire 1 ( RW $end
$var wire 6 * rt [5:0] $end
$var wire 6 + rs [5:0] $end
$var wire 6 , rd [5:0] $end
$var wire 6 - op [5:0] $end
$var wire 6 . Sa [5:0] $end
$var wire 16 / Immediate [15:0] $end
$var reg 32 0 IDataOut [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
bx )
x(
bx '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#10000
b0 '
b0 )
0(
#60000
b100 !
b100 *
b1 #
b1 ,
b100000001100 &
b100000001100 /
b1000000100000001100 0
1(
#110000
b100 $
b100 -
b10100 !
b10100 *
b11 #
b11 ,
b1100000011100 &
b1100000011100 /
b10000000101000001100000011100 0
b100 '
b100 )
#160000
b1000 $
b1000 -
b1 "
b1 +
b100 !
b100 *
b101 #
b101 ,
b10100000101100 &
b10100000101100 /
b100000001001000010100000101100 0
b1000 '
b1000 )
