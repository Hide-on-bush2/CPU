$date
	Thu Nov 14 11:02:32 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALU_sim $end
$var wire 1 ! zero $end
$var wire 32 " Result [31:0] $end
$var reg 1 # ALUSrcA $end
$var reg 1 $ ALUSrcB $end
$var reg 3 % ALUop [2:0] $end
$var reg 32 & Ext [31:0] $end
$var reg 32 ' ReadData1 [31:0] $end
$var reg 32 ( ReadData2 [31:0] $end
$var reg 32 ) Sa [31:0] $end
$scope module uut $end
$var wire 1 # ALUSrcA $end
$var wire 1 $ ALUSrcB $end
$var wire 3 * ALUop [2:0] $end
$var wire 32 + Ext [31:0] $end
$var wire 32 , ReadData1 [31:0] $end
$var wire 32 - ReadData2 [31:0] $end
$var wire 32 . Sa [31:0] $end
$var wire 1 ! zero $end
$var wire 32 / InB [31:0] $end
$var wire 32 0 InA [31:0] $end
$var reg 32 1 Result [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 1
b0 0
b0 /
b1 .
b0 -
b0 ,
b1 +
b0 *
b1 )
b0 (
b0 '
b1 &
b0 %
0$
0#
b0 "
1!
$end
#50
0!
b1 "
b1 1
b1 0
1#
#100
b1 /
b0 0
1$
0#
#150
b10 "
b10 1
b1 0
1#
#200
b11111111111111111111111111111111 "
b11111111111111111111111111111111 1
b10 /
0$
0#
b1 %
b1 *
b100 )
b100 .
b11 &
b11 +
b10 (
b10 -
b1 '
b1 ,
#250
b10 "
b10 1
b100 0
1#
#300
b11111111111111111111111111111110 "
b11111111111111111111111111111110 1
b11 /
b1 0
1$
0#
#350
b1 "
b1 1
b100 0
1#
#400
b1 0
b100 "
b100 1
b10 /
0$
0#
b10 %
b10 *
b10 &
b10 +
#450
b100000 "
b100000 1
b100 0
1#
#500
b100 "
b100 1
b1 0
1$
0#
#550
b100000 "
b100000 1
b100 0
1#
#600
b1 0
b11 "
b11 1
0$
0#
b11 %
b11 *
#650
b110 "
b110 1
b100 0
1#
#700
b11 "
b11 1
b1 0
1$
0#
#750
b110 "
b110 1
b100 0
1#
#800
1!
b1 0
b0 "
b0 1
0$
0#
b100 %
b100 *
#850
b100 0
1#
#900
b1 0
1$
0#
#950
b100 0
1#
#1000
b1 0
0$
0#
b101 %
b101 *
b1 )
b1 .
#1050
1#
#1100
1$
0#
#1150
1#
#1200
0!
b1 "
b1 1
0$
0#
b110 %
b110 *
#1250
1#
#1300
1$
0#
#1350
1#
#1400
b11111111111111111111111111111100 "
b11111111111111111111111111111100 1
0$
0#
b111 %
b111 *
#1450
1#
#1500
1$
0#
#1550
1#
#1600
